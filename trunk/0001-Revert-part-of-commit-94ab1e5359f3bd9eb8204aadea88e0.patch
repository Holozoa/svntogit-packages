From 4bd41b51ff2a8dec070cb061df3c94083ceea891 Mon Sep 17 00:00:00 2001
From: Kjell Ahlstedt <kjellahlstedt@gmail.com>
Date: Tue, 3 May 2022 16:01:19 +0200
Subject: [PATCH] Revert part of commit
 94ab1e5359f3bd9eb8204aadea88e08f52a291d8

See glibmm#98
---
 glib/glibmm/ustring.h | 15 +++++++--------
 1 file changed, 7 insertions(+), 8 deletions(-)

diff --git a/glib/glibmm/ustring.h b/glib/glibmm/ustring.h
index 8746ca6e..22d8abca 100644
--- a/glib/glibmm/ustring.h
+++ b/glib/glibmm/ustring.h
@@ -199,14 +199,7 @@ public:
   using pointer = void;
 
   inline ustring_Iterator();
-  // A std::string::iterator can be copied to a std::string::const_iterator.
-  template <typename T2, typename = typename std::enable_if<
-    std::is_same<std::string::const_iterator, T>::value &&
-    std::is_same<std::string::iterator, T2>::value, T2>::type>
-  inline ustring_Iterator(const ustring_Iterator<T2>& other)
-  : pos_(other.base())
-  { }
-  ustring_Iterator(const ustring_Iterator& other) = default;
+  inline ustring_Iterator(const ustring_Iterator<std::string::iterator>& other);
   ustring_Iterator& operator=(const ustring_Iterator& other) = default;
 
   inline value_type operator*() const;
@@ -1169,6 +1162,12 @@ inline ustring_Iterator<T>::ustring_Iterator() : pos_()
 {
 }
 
+template <class T>
+inline ustring_Iterator<T>::ustring_Iterator(const ustring_Iterator<std::string::iterator>& other)
+: pos_(other.base())
+{
+}
+
 template <class T>
 inline typename ustring_Iterator<T>::value_type ustring_Iterator<T>::operator*() const
 {
-- 
2.34.1

